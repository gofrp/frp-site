<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>frp – 通用功能</title>
    <link>/docs/features/common/</link>
    <description>Recent content in 通用功能 on frp</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="/docs/features/common/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: 配置文件</title>
      <link>/docs/features/common/configure/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/features/common/configure/</guid>
      <description>
        
        
        &lt;p&gt;frp 目前仅支持 ini 格式的配置文件，frps 和 frpc 各自支持不同的参数。&lt;/p&gt;
&lt;p&gt;frps 主要配置服务端的一些通用参数，frpc 则需要额外配置每一个代理的详细配置。&lt;/p&gt;
&lt;h3 id=&#34;格式&#34;&gt;格式&lt;/h3&gt;
&lt;p&gt;目前仅支持 ini 格式的配置，如下的示例配置将本地 SSH 服务穿透到公网。&lt;/p&gt;
&lt;p&gt;frps 配置：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ini&#34; data-lang=&#34;ini&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;[common]&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;bind_port&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;7000&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;frpc 配置：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ini&#34; data-lang=&#34;ini&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;[common]&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;server_addr&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;x.x.x.x&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;server_port&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;7000&lt;/span&gt;

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;[ssh]&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;tcp&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;local_ip&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;127.0.0.1&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;local_port&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;22&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;remote_port&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;6000&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;[common]&lt;/code&gt; 是固定名称的段落，用于配置通用参数。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[ssh]&lt;/code&gt; 仅在 frpc 中使用，用于配置单个代理的参数。代理名称必须唯一，不能重复。&lt;/p&gt;
&lt;p&gt;同一个客户端可以配置多个代理。&lt;/p&gt;
&lt;h3 id=&#34;模版渲染&#34;&gt;模版渲染&lt;/h3&gt;
&lt;p&gt;配置文件支持使用环境变量进行模版渲染，模版格式采用 Go 的标准格式。&lt;/p&gt;
&lt;p&gt;示例配置如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ini&#34; data-lang=&#34;ini&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# frpc.ini&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;[common]&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;server_addr&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;{{ .Envs.FRP_SERVER_ADDR }}&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;server_port&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;7000&lt;/span&gt;

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;[ssh]&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;tcp&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;local_ip&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;127.0.0.1&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;local_port&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;22&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;remote_port&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;{{ .Envs.FRP_SSH_REMOTE_PORT }}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;启动 frpc 程序：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;export FRP_SERVER_ADDR=&amp;quot;x.x.x.x&amp;quot;
export FRP_SSH_REMOTE_PORT=&amp;quot;6000&amp;quot;
./frpc -c ./frpc.ini
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;frpc 会自动使用环境变量渲染配置文件模版，所有环境变量需要以 &lt;code&gt;.Envs&lt;/code&gt; 为前缀。&lt;/p&gt;
&lt;h3 id=&#34;完整配置参数&#34;&gt;完整配置参数&lt;/h3&gt;
&lt;p&gt;由于 frp 目前支持的功能和配置项较多，未在文档中列出的功能参数可以在 &lt;a href=&#34;/docs/reference&#34;&gt;参考&lt;/a&gt; 中查看。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: 监控</title>
      <link>/docs/features/common/monitor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/features/common/monitor/</guid>
      <description>
        
        
        &lt;p&gt;目前 frps 服务端支持内存和 Prometheus 两种监控系统。&lt;/p&gt;
&lt;h3 id=&#34;内存&#34;&gt;内存&lt;/h3&gt;
&lt;p&gt;内存中存储的监控数据主要用于 Dashboard 展示，当在 frps 配置中开启 Dashboard 功能后会默认开启内部的监控。&lt;/p&gt;
&lt;p&gt;内存中的监控数据每次重启进程后会清空，监控数据可以通过 Dashboard 的地址发送 HTTP 请求获取，但是目前此 API 尚不规范，不推荐直接使用。&lt;/p&gt;
&lt;h3 id=&#34;prometheus&#34;&gt;Prometheus&lt;/h3&gt;
&lt;p&gt;由于设计问题，Prometheus 对外提供的查询接口复用了 Dashboard 的地址，所以要使用 Prometheus 监控，必须要首先开启 Dashboard。&lt;/p&gt;
&lt;p&gt;在 frps.ini 中启用 Dashboard，并设置 &lt;code&gt;enable_prometheus = true&lt;/code&gt;，则通过 &lt;code&gt;http://{dashboard_addr}/metrics&lt;/code&gt; 可以获取到 Prometheus 的监控数据。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: 身份认证</title>
      <link>/docs/features/common/authentication/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/features/common/authentication/</guid>
      <description>
        
        
        &lt;p&gt;目前 frpc 和 frps 之间支持两种身份验证方式，&lt;code&gt;token&lt;/code&gt; 和 &lt;code&gt;oidc&lt;/code&gt;，默认为 &lt;code&gt;token&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;通过 &lt;code&gt;frpc.ini&lt;/code&gt; 和 &lt;code&gt;frps.ini&lt;/code&gt; 的 &lt;code&gt;[common]&lt;/code&gt; 段落中配置 &lt;code&gt;authentication_method&lt;/code&gt; 来指定要使用的身份验证方式。&lt;/p&gt;
&lt;p&gt;只有通过身份验证的客户端(frpc)才能成功连接 frps。&lt;/p&gt;
&lt;h3 id=&#34;token&#34;&gt;Token&lt;/h3&gt;
&lt;p&gt;基于 Token 的身份验证方式比较简单，需要在 frpc 和 frps 的 &lt;code&gt;[common]&lt;/code&gt; 段落中配置上相同的 &lt;code&gt;token&lt;/code&gt; 参数即可。&lt;/p&gt;
&lt;h3 id=&#34;oidc&#34;&gt;OIDC&lt;/h3&gt;
&lt;p&gt;OIDC 是 &lt;code&gt;OpenID Connect&lt;/code&gt; 的简称，验证流程参考 &lt;a href=&#34;https://tools.ietf.org/html/rfc6749#section-4.4&#34;&gt;Client Credentials Grant&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;启用这一验证方式，参考配置如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ini&#34; data-lang=&#34;ini&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# frps.ini&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;[common]&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;authentication_method&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;oidc&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;oidc_issuer&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;https://example-oidc-issuer.com/&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;oidc_audience&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;https://oidc-audience.com/.default&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ini&#34; data-lang=&#34;ini&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# frpc.ini&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;[common]&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;authentication_method&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;oidc&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;oidc_client_id&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;98692467-37de-409a-9fac-bb2585826f18 # Replace with OIDC client ID&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;oidc_client_secret&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;oidc_secret&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;oidc_audience&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;https://oidc-audience.com/.default&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;oidc_token_endpoint_url&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;https://example-oidc-endpoint.com/oauth2/v2.0/token&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;参数说明&#34;&gt;参数说明&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;类型&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;authentication_method&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;身份验证方式，token 或 oidc，默认为 token。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;authenticate_heartbeats&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;在每一个心跳包中附加上身份认证信息，客户端服务端需要一致。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;authenticate_new_work_conns&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;在每次创建工作连接时附加上身份认证信息，客户端服务端需要一致。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Web 界面</title>
      <link>/docs/features/common/ui/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/features/common/ui/</guid>
      <description>
        
        
        &lt;p&gt;目前 frpc 和 frps 分别内置了相应的 Web 界面方便用户使用。&lt;/p&gt;
&lt;h3 id=&#34;服务端-dashboard&#34;&gt;服务端 Dashboard&lt;/h3&gt;
&lt;p&gt;服务端 Dashboard 使用户可以通过浏览器查看 frp 的状态以及代理统计信息。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注：Dashboard 尚未针对大量的 proxy 数据展示做优化，如果出现 Dashboard 访问较慢的情况，请不要启用此功能。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;需要在 frps.ini 中指定 dashboard 服务使用的端口，即可开启此功能：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ini&#34; data-lang=&#34;ini&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# frps.ini&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;[common]&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;dashboard_port&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;7500&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# dashboard 用户名密码，默认都为 admin，如果不需要，需要主动设置为空&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;dashboard_user&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;admin&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;dashboard_pwd&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;admin&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;打开浏览器通过 &lt;code&gt;http://[server_addr]:7500&lt;/code&gt; 访问 Dashboard 界面，用户名密码默认为 &lt;code&gt;admin&lt;/code&gt;。&lt;/p&gt;
&lt;h3 id=&#34;客户端管理界面&#34;&gt;客户端管理界面&lt;/h3&gt;
&lt;p&gt;frpc 内置的 Admin UI 可以帮助用户通过浏览器来查询和管理客户端的 proxy 状态和配置。&lt;/p&gt;
&lt;p&gt;需要在 frpc.ini 中指定 admin 服务使用的端口，即可开启此功能：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ini&#34; data-lang=&#34;ini&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# frpc.ini&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;[common]&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;admin_addr&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;127.0.0.1&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;admin_port&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;7400&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;admin_user&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;admin&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;admin_pwd&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;admin&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;打开浏览器通过 &lt;code&gt;http://127.0.0.1:7400&lt;/code&gt; 访问 Admin UI，用户名密码默认为 &lt;code&gt;admin&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;如果想要在外网环境访问 Admin UI，可以将 7400 端口通过 frp 映射出去即可，但需要重视安全风险。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ini&#34; data-lang=&#34;ini&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# frpc.ini&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;[admin_ui]&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;tcp&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;local_port&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;7400&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;remote_port&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;7400&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: 通信安全及优化</title>
      <link>/docs/features/common/network/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/features/common/network/</guid>
      <description>
        
        
        
      </description>
    </item>
    
    <item>
      <title>Docs: 负载均衡与健康检查</title>
      <link>/docs/features/common/load-balancer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/features/common/load-balancer/</guid>
      <description>
        
        
        &lt;h3 id=&#34;负载均衡&#34;&gt;负载均衡&lt;/h3&gt;
&lt;p&gt;可以将多个相同类型的代理加入到同一个 &lt;code&gt;group&lt;/code&gt; 中，从而实现负载均衡的能力。&lt;/p&gt;
&lt;p&gt;目前支持的代理类型：&lt;code&gt;tcp&lt;/code&gt;, &lt;code&gt;http&lt;/code&gt;, &lt;code&gt;tcpmux&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ini&#34; data-lang=&#34;ini&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# frpc.ini&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;[test1]&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;tcp&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;local_port&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;8080&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;remote_port&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;80&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;group&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;web&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;group_key&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;123&lt;/span&gt;

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;[test2]&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;tcp&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;local_port&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;8081&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;remote_port&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;80&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;group&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;web&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;group_key&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;123&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;用户连接 frps 服务器的 80 端口，frps 会将接收到的用户连接随机分发给其中一个存活的 proxy。这样可以在一台 frpc 机器挂掉后仍然有其他节点能够提供服务。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;tcp&lt;/code&gt; 类型代理要求 &lt;code&gt;group_key&lt;/code&gt; 相同，做权限验证，且 &lt;code&gt;remote_port&lt;/code&gt; 相同。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;http&lt;/code&gt; 类型代理要求 &lt;code&gt;group_key&lt;/code&gt;, &lt;code&gt;custom_domains&lt;/code&gt; 或 &lt;code&gt;subdomain&lt;/code&gt; 和 &lt;code&gt;locations&lt;/code&gt; 相同。&lt;/p&gt;
&lt;h3 id=&#34;健康检查&#34;&gt;健康检查&lt;/h3&gt;
&lt;p&gt;通过给代理配置健康检查的参数，可以在要反向代理的服务出现故障时，将这个服务从 frps 中摘除，搭配负载均衡的功能，可以用来实现高可用的架构，避免服务单点故障。&lt;/p&gt;
&lt;p&gt;在每一个 proxy 的配置下加上 &lt;code&gt;health_check_type = {type}&lt;/code&gt; 来启用健康检查功能。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;type&lt;/code&gt; 目前可选 &lt;code&gt;tcp&lt;/code&gt; 和 &lt;code&gt;http&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;tcp 只要能够建立连接则认为服务正常，http 会发送一个 http 请求，服务需要返回 2xx 的状态码才会被认为正常&lt;/p&gt;
&lt;p&gt;tcp 示例配置如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ini&#34; data-lang=&#34;ini&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# frpc.ini&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;[test1]&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;tcp&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;local_port&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;22&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;remote_port&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;6000&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 启用健康检查，类型为 tcp&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;health_check_type&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;tcp&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 建立连接超时时间为 3 秒&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;health_check_timeout_s&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;3&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 连续 3 次检查失败，此 proxy 会被摘除&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;health_check_max_failed&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;3&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 每隔 10 秒进行一次健康检查&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;health_check_interval_s&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;10&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;http 示例配置如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ini&#34; data-lang=&#34;ini&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# frpc.ini&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;[web]&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;http&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;local_ip&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;127.0.0.1&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;local_port&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;80&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;custom_domains&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;test.yourdomain.com&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 启用健康检查，类型为 http&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;health_check_type&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;http&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 健康检查发送 http 请求的 url，后端服务需要返回 2xx 的 http 状态码&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;health_check_url&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;/status&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;health_check_interval_s&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;10&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;health_check_max_failed&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;3&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;health_check_timeout_s&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;3&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: 获取用户真实 IP</title>
      <link>/docs/features/common/realip/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/features/common/realip/</guid>
      <description>
        
        
        &lt;h3 id=&#34;http-x-forwarded-for&#34;&gt;HTTP X-Forwarded-For&lt;/h3&gt;
&lt;p&gt;目前只有 &lt;code&gt;HTTP&lt;/code&gt; 类型的代理支持这一功能，可以通过用户请求的 header 中的 &lt;code&gt;X-Forwarded-For&lt;/code&gt; 来获取用户真实 IP，默认启用。&lt;/p&gt;
&lt;h3 id=&#34;proxy-protocol&#34;&gt;Proxy Protocol&lt;/h3&gt;
&lt;p&gt;frp 支持通过 &lt;code&gt;Proxy Protocol&lt;/code&gt; 协议来传递经过 frp 代理的请求的真实 IP，此功能支持所有以 TCP 为底层协议的类型，不支持 UDP。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Proxy Protocol&lt;/code&gt; 功能启用后，frpc 在和本地服务建立连接后，会先发送一段 &lt;code&gt;Proxy Protocol&lt;/code&gt; 的协议内容给本地服务，本地服务通过解析这一内容可以获得访问用户的真实 IP。所以不仅仅是 HTTP 服务，任何的 TCP 服务，只要支持这一协议，都可以获得用户的真实 IP 地址。&lt;/p&gt;
&lt;p&gt;需要注意的是，在代理配置中如果要启用此功能，需要本地的服务能够支持 &lt;code&gt;Proxy Protocol&lt;/code&gt; 这一协议，目前 nginx 和 haproxy 都能够很好的支持。&lt;/p&gt;
&lt;p&gt;这里以 &lt;code&gt;HTTPS&lt;/code&gt; 类型为例:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ini&#34; data-lang=&#34;ini&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# frpc.ini&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;[web]&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;https&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;local_port&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;443&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;custom_domains&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;test.yourdomain.com&lt;/span&gt;

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 目前支持 v1 和 v2 两个版本的 proxy protocol 协议。&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;proxy_protocol_version&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;v2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;只需要在代理配置中增加一行 &lt;code&gt;proxy_protocol_version = v2&lt;/code&gt; 即可开启此功能。&lt;/p&gt;
&lt;p&gt;本地的 HTTPS 服务可以通过在 nginx 的配置中启用 &lt;code&gt;Proxy Protocol&lt;/code&gt; 的解析并将结果设置在 &lt;code&gt;X-Real-IP&lt;/code&gt; 这个 Header 中就可以在自己的 Web 服务中通过 &lt;code&gt;X-Real-IP&lt;/code&gt; 获取到用户的真实 IP。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: 范围端口映射</title>
      <link>/docs/features/common/range/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/features/common/range/</guid>
      <description>
        
        
        &lt;p&gt;在 frpc 的配置文件中可以指定映射多个端口，目前只支持 TCP 和 UDP 的代理类型。&lt;/p&gt;
&lt;p&gt;这一功能通过 &lt;code&gt;range:&lt;/code&gt; 段落标记来实现，客户端会解析这个标记中的配置，将其拆分成多个 proxy，每一个 proxy 以数字为后缀命名。&lt;/p&gt;
&lt;p&gt;例如要映射本地 6000-6005, 6007 这7个端口，主要配置如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ini&#34; data-lang=&#34;ini&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# frpc.ini&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;[range:test_tcp]&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;tcp&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;local_ip&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;127.0.0.1&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;local_port&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;6000-6005,6007&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;remote_port&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;6000-6005,6007&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;实际连接成功后会创建 7 个 proxy，命名为 &lt;code&gt;test_tcp_0, test_tcp_1 ... test_tcp_6&lt;/code&gt;。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: 客户端</title>
      <link>/docs/features/common/client/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/features/common/client/</guid>
      <description>
        
        
        &lt;h3 id=&#34;热加载配置文件&#34;&gt;热加载配置文件&lt;/h3&gt;
&lt;p&gt;当修改了 frpc 中的代理配置，可以通过 frpc reload 命令来动态加载配置文件，通常会在 10 秒内完成代理的更新。&lt;/p&gt;
&lt;p&gt;启用此功能需要在 frpc 中启用 admin 端口，用于提供 API 服务。配置如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ini&#34; data-lang=&#34;ini&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# frpc.ini&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;[common]&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;admin_addr&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;127.0.0.1&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;admin_port&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;7400&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;之后执行重启命令：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;frpc reload -c ./frpc.ini&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;等待一段时间后客户端会根据新的配置文件创建、更新、删除代理。&lt;/p&gt;
&lt;p&gt;需要注意的是，[common] 中的参数除了 start 外目前无法被修改。&lt;/p&gt;
&lt;h3 id=&#34;命令行查看代理状态&#34;&gt;命令行查看代理状态&lt;/h3&gt;
&lt;p&gt;frpc 支持通过 &lt;code&gt;frpc status -c ./frpc.ini&lt;/code&gt; 命令查看代理的状态信息，此功能需要在 frpc 中配置 admin 端口。&lt;/p&gt;
&lt;h3 id=&#34;通过代理连接-frps&#34;&gt;通过代理连接 frps&lt;/h3&gt;
&lt;p&gt;在只能通过代理访问外网的环境内，frpc 支持通过 HTTP 或 SOCKS5 代理和 frps 建立连接。&lt;/p&gt;
&lt;p&gt;可以通过设置 &lt;code&gt;HTTP_PROXY&lt;/code&gt; 系统环境变量或者通过在 frpc 的配置文件中设置 &lt;code&gt;http_proxy&lt;/code&gt; 参数来使用此功能。&lt;/p&gt;
&lt;p&gt;仅在 &lt;code&gt;protocol = tcp&lt;/code&gt; 时生效。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ini&#34; data-lang=&#34;ini&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# frpc.ini&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;[common]&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;server_addr&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;x.x.x.x&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;server_port&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;7000&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;http_proxy&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;http://user:pwd@192.168.1.128:8080&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;将 &lt;code&gt;http_proxy&lt;/code&gt; 设置为 &lt;code&gt;socks5://user:pwd@192.168.1.128:8080&lt;/code&gt; 也可以连接到 SOCKS5 代理。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: 服务端管理</title>
      <link>/docs/features/common/server-manage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/features/common/server-manage/</guid>
      <description>
        
        
        &lt;h3 id=&#34;端口白名单&#34;&gt;端口白名单&lt;/h3&gt;
&lt;p&gt;为了防止端口被滥用，可以手动指定允许哪些端口被使用，在服务端配置中通过 &lt;code&gt;allow_ports&lt;/code&gt; 来指定：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ini&#34; data-lang=&#34;ini&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# frps.ini&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;[common]&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;allow_ports&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;2000-3000,3001,3003,4000-50000&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;allow_ports&lt;/code&gt; 可以配置允许使用的某个指定端口或者是一个范围内的所有端口，以 &lt;code&gt;,&lt;/code&gt; 分隔，指定的范围以 &lt;code&gt;-&lt;/code&gt; 分隔。&lt;/p&gt;
&lt;h3 id=&#34;端口复用&#34;&gt;端口复用&lt;/h3&gt;
&lt;p&gt;目前 frps 中的 &lt;code&gt;vhost_http_port&lt;/code&gt; 和 &lt;code&gt;vhost_https_port&lt;/code&gt; 支持配置成和 &lt;code&gt;bind_port&lt;/code&gt; 为同一个端口，frps 会对连接的协议进行分析，之后进行不同的处理。&lt;/p&gt;
&lt;p&gt;例如在某些限制较严格的网络环境中，可以将 &lt;code&gt;bind_port&lt;/code&gt; 和 &lt;code&gt;vhost_https_port&lt;/code&gt; 都设置为 443。&lt;/p&gt;
&lt;h3 id=&#34;限速&#34;&gt;限速&lt;/h3&gt;
&lt;h4 id=&#34;代理限速&#34;&gt;代理限速&lt;/h4&gt;
&lt;p&gt;目前支持在客户端的代理配置中设置代理级别的限速，限制单个 proxy 可以占用的带宽。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ini&#34; data-lang=&#34;ini&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# frpc.ini&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;[ssh]&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;tcp&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;local_port&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;22&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;remote_port&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;6000&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;bandwidth_limit&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;1MB&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在代理配置中增加 &lt;code&gt;bandwidth_limit&lt;/code&gt; 字段启用此功能，目前仅支持 &lt;code&gt;MB&lt;/code&gt; 和 &lt;code&gt;KB&lt;/code&gt; 单位。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: 客户端插件</title>
      <link>/docs/features/common/client-plugin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/features/common/client-plugin/</guid>
      <description>
        
        
        &lt;p&gt;默认情况下，frpc 只会转发请求到本地 TCP 或 UDP 端口，也就是通过 &lt;code&gt;local_ip&lt;/code&gt; 和 &lt;code&gt;local_port&lt;/code&gt; 指定的本地服务地址。&lt;/p&gt;
&lt;p&gt;通过客户端插件的功能将一些简单的本地服务内置在 frpc 中，可以帮助用户在只启动 frpc 的情况下实现原本需要额外启动其他服务才能实现的功能。&lt;/p&gt;
&lt;p&gt;在每一个代理的配置中，通过 &lt;code&gt;plugin&lt;/code&gt; 指定需要使用的插件，插件的配置参数都以 &lt;code&gt;plugin_&lt;/code&gt; 开头。当启用客户端插件后，&lt;code&gt;local_ip&lt;/code&gt; 和 &lt;code&gt;local_port&lt;/code&gt; 不再需要配置。&lt;/p&gt;
&lt;p&gt;客户端插件可以被应用在任意类型的代理中，但是需要插件本身的协议能够支持。例如静态文件访问插件可以通过 TCP 或者 HTTP 的代理暴露出去。&lt;/p&gt;
&lt;p&gt;使用 &lt;code&gt;http_proxy&lt;/code&gt; 插件的示例:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ini&#34; data-lang=&#34;ini&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# frpc.ini&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;[http_proxy]&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;tcp&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;remote_port&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;6000&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;plugin&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;http_proxy&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;plugin_http_user&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;abc&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;plugin_http_passwd&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;abc&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;plugin_http_user&lt;/code&gt; 和 &lt;code&gt;plugin_http_passwd&lt;/code&gt; 即为 &lt;code&gt;http_proxy&lt;/code&gt; 插件可选的配置参数。&lt;/p&gt;
&lt;h3 id=&#34;http_proxy&#34;&gt;http_proxy&lt;/h3&gt;
&lt;p&gt;HTTP 代理插件，用于将内网机器作为 HTTP 代理暴露给其他服务，可以通过此代理访问到此内网机器能够访问到的其他服务。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;参数&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;可选&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;plugin_http_user&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;是&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;HTTP 代理用户名&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;plugin_http_passwd&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;是&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;HTTP 代理密码&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;socks5&#34;&gt;socks5&lt;/h3&gt;
&lt;p&gt;SOCKS5 代理。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;参数&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;可选&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;plugin_user&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;是&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;连接代理的用户名&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;plugin_passwd&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;是&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;连接代理的密码&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;static_file&#34;&gt;static_file&lt;/h3&gt;
&lt;p&gt;静态文件浏览服务，通过暴露一个简单的 HTTP 服务查看指定的目录下的文件。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;参数&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;可选&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;plugin_local_path&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;否&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;要对外暴露的文件目录&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;plugin_strip_prefix&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;是&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;用户请求的 URL 路径会被映射到本地文件，如果希望去除用户访问文件的前缀，需要配置此参数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;plugin_http_user&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;是&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;HTTP BasicAuth 用户名&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;plugin_http_passwd&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;是&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;HTTP BasicAuth 密码&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;unix_domain_socket&#34;&gt;unix_domain_socket&lt;/h3&gt;
&lt;p&gt;代理本地 Unix 域套接字的服务。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;参数&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;可选&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;plugin_unix_path&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;否&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;本地 Unix 域套接字地址&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;http2https&#34;&gt;http2https&lt;/h3&gt;
&lt;p&gt;将本地的 HTTPS 服务以 HTTP 的形式暴露出去。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;参数&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;可选&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;plugin_local_addr&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;否&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;本地服务地址&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;plugin_host_header_rewrite&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;是&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;如果配置，发送给本地服务的请求的 Host 字段会被修改&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;plugin_header_{header name}&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;是&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;发送给本地服务的请求会被加上指定的 header 字段&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;https2http&#34;&gt;https2http&lt;/h3&gt;
&lt;p&gt;将本地的 HTTP 服务以 HTTPS 的形式暴露出去。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;参数&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;可选&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;plugin_local_addr&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;否&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;本地服务地址&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;plugin_crt_path&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;否&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;HTTPS 所需的证书文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;plugin_key_path&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;否&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;HTTPS 所需的密钥文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;plugin_host_header_rewrite&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;是&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;如果配置，发送给本地服务的请求的 Host 字段会被修改&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;plugin_header_{header name}&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;是&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;发送给本地服务的请求会被加上指定的 header 字段&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;https2https&#34;&gt;https2https&lt;/h3&gt;
&lt;p&gt;将本地的 HTTPS 服务以 HTTPS 的形式暴露出去。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;参数&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;可选&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;plugin_local_addr&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;否&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;本地服务地址&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;plugin_crt_path&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;否&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;HTTPS 所需的证书文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;plugin_key_path&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;否&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;HTTPS 所需的密钥文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;plugin_host_header_rewrite&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;是&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;如果配置，发送给本地服务的请求的 Host 字段会被修改&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;plugin_header_{header name}&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;是&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;发送给本地服务的请求会被加上指定的 header 字段&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: 服务端插件</title>
      <link>/docs/features/common/server-plugin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/features/common/server-plugin/</guid>
      <description>
        
        
        &lt;p&gt;frp 服务端插件的作用是在不侵入自身代码的前提下，扩展 frp 服务端的能力。&lt;/p&gt;
&lt;p&gt;frp 服务端插件会以单独进程的形式运行，并且监听在一个端口上，对外提供 RPC 接口，响应 frps 的请求。&lt;/p&gt;
&lt;p&gt;frps 在执行某些操作前，会根据配置向服务端插件发送 RPC 请求，根据插件的响应来执行相应的操作。&lt;/p&gt;
&lt;h3 id=&#34;rpc-请求&#34;&gt;RPC 请求&lt;/h3&gt;
&lt;p&gt;服务端插件接收到操作请求后，可以给出三种回应。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;拒绝操作，需要返回拒绝操作的原因。&lt;/li&gt;
&lt;li&gt;允许操作，不需要修改操作内容。&lt;/li&gt;
&lt;li&gt;允许操作，对操作请求进行修改后，返回修改后的内容。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;接口&#34;&gt;接口&lt;/h3&gt;
&lt;p&gt;接口路径可以在 frps 配置中为每个插件单独配置，这里以 &lt;code&gt;/handler&lt;/code&gt; 为例。&lt;/p&gt;
&lt;p&gt;Request&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;POST /handler?version=0.1.0&amp;amp;op=Login
{
    &amp;quot;content&amp;quot;: {
        ... // 具体的操作信息
    }
}

请求 Header
X-Frp-Reqid: 用于追踪请求
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Response&lt;/p&gt;
&lt;p&gt;非 200 的返回都认为是请求异常。&lt;/p&gt;
&lt;p&gt;拒绝执行操作&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{
    &amp;quot;reject&amp;quot;: true,
    &amp;quot;reject_reason&amp;quot;: &amp;quot;invalid user&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;允许且内容不需要变动&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{
    &amp;quot;reject&amp;quot;: false,
    &amp;quot;unchange&amp;quot;: true
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;允许且需要替换操作内容&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{
    &amp;quot;unchange&amp;quot;: &amp;quot;false&amp;quot;,
    &amp;quot;content&amp;quot;: {
        ... // 替换后的操作信息，格式必须和请求时的一致
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;操作类型&#34;&gt;操作类型&lt;/h3&gt;
&lt;p&gt;目前插件支持管理的操作类型有 &lt;code&gt;Login&lt;/code&gt;、&lt;code&gt;NewProxy&lt;/code&gt;、&lt;code&gt;Ping&lt;/code&gt;、&lt;code&gt;NewWorkConn&lt;/code&gt; 和 &lt;code&gt;NewUserConn&lt;/code&gt;。&lt;/p&gt;
&lt;h4 id=&#34;login&#34;&gt;Login&lt;/h4&gt;
&lt;p&gt;用户登录操作信息&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{
    &amp;quot;content&amp;quot;: {
        &amp;quot;version&amp;quot;: &amp;lt;string&amp;gt;,
        &amp;quot;hostname&amp;quot;: &amp;lt;string&amp;gt;,
        &amp;quot;os&amp;quot;: &amp;lt;string&amp;gt;,
        &amp;quot;arch&amp;quot;: &amp;lt;string&amp;gt;,
        &amp;quot;user&amp;quot;: &amp;lt;string&amp;gt;,
        &amp;quot;timestamp&amp;quot;: &amp;lt;int64&amp;gt;,
        &amp;quot;privilege_key&amp;quot;: &amp;lt;string&amp;gt;,
        &amp;quot;run_id&amp;quot;: &amp;lt;string&amp;gt;,
        &amp;quot;pool_count&amp;quot;: &amp;lt;int&amp;gt;,
        &amp;quot;metas&amp;quot;: map&amp;lt;string&amp;gt;string
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;newproxy&#34;&gt;NewProxy&lt;/h4&gt;
&lt;p&gt;创建代理的相关信息&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{
    &amp;quot;content&amp;quot;: {
        &amp;quot;user&amp;quot;: {
            &amp;quot;user&amp;quot;: &amp;lt;string&amp;gt;,
            &amp;quot;metas&amp;quot;: map&amp;lt;string&amp;gt;string
            &amp;quot;run_id&amp;quot;: &amp;lt;string&amp;gt;
        },
        &amp;quot;proxy_name&amp;quot;: &amp;lt;string&amp;gt;,
        &amp;quot;proxy_type&amp;quot;: &amp;lt;string&amp;gt;,
        &amp;quot;use_encryption&amp;quot;: &amp;lt;bool&amp;gt;,
        &amp;quot;use_compression&amp;quot;: &amp;lt;bool&amp;gt;,
        &amp;quot;group&amp;quot;: &amp;lt;string&amp;gt;,
        &amp;quot;group_key&amp;quot;: &amp;lt;string&amp;gt;,

        // tcp and udp only
        &amp;quot;remote_port&amp;quot;: &amp;lt;int&amp;gt;,

        // http and https only
        &amp;quot;custom_domains&amp;quot;: []&amp;lt;string&amp;gt;,
        &amp;quot;subdomain&amp;quot;: &amp;lt;string&amp;gt;,
        &amp;quot;locations&amp;quot;: &amp;lt;string&amp;gt;,
        &amp;quot;http_user&amp;quot;: &amp;lt;string&amp;gt;,
        &amp;quot;http_pwd&amp;quot;: &amp;lt;string&amp;gt;,
        &amp;quot;host_header_rewrite&amp;quot;: &amp;lt;string&amp;gt;,
        &amp;quot;headers&amp;quot;: map&amp;lt;string&amp;gt;string,

        // stcp only
        &amp;quot;sk&amp;quot;: &amp;lt;string&amp;gt;,

        // tcpmux only
        &amp;quot;multiplexer&amp;quot;: &amp;lt;string&amp;gt;

        &amp;quot;metas&amp;quot;: map&amp;lt;string&amp;gt;string
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;ping&#34;&gt;Ping&lt;/h4&gt;
&lt;p&gt;心跳相关信息&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{
    &amp;quot;content&amp;quot;: {
        &amp;quot;user&amp;quot;: {
            &amp;quot;user&amp;quot;: &amp;lt;string&amp;gt;,
            &amp;quot;metas&amp;quot;: map&amp;lt;string&amp;gt;string
            &amp;quot;run_id&amp;quot;: &amp;lt;string&amp;gt;
        },
        &amp;quot;timestamp&amp;quot;: &amp;lt;int64&amp;gt;,
        &amp;quot;privilege_key&amp;quot;: &amp;lt;string&amp;gt;
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;newworkconn&#34;&gt;NewWorkConn&lt;/h4&gt;
&lt;p&gt;创建工作连接&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{
    &amp;quot;content&amp;quot;: {
        &amp;quot;user&amp;quot;: {
            &amp;quot;user&amp;quot;: &amp;lt;string&amp;gt;,
            &amp;quot;metas&amp;quot;: map&amp;lt;string&amp;gt;string
            &amp;quot;run_id&amp;quot;: &amp;lt;string&amp;gt;
        },
        &amp;quot;run_id&amp;quot;: &amp;lt;string&amp;gt;
        &amp;quot;timestamp&amp;quot;: &amp;lt;int64&amp;gt;,
        &amp;quot;privilege_key&amp;quot;: &amp;lt;string&amp;gt;
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;newuserconn&#34;&gt;NewUserConn&lt;/h4&gt;
&lt;p&gt;创建用户连接 (支持 &lt;code&gt;tcp&lt;/code&gt;、&lt;code&gt;stcp&lt;/code&gt;、&lt;code&gt;https&lt;/code&gt; 和 &lt;code&gt;tcpmux&lt;/code&gt; 协议)。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{
    &amp;quot;content&amp;quot;: {
        &amp;quot;user&amp;quot;: {
            &amp;quot;user&amp;quot;: &amp;lt;string&amp;gt;,
            &amp;quot;metas&amp;quot;: map&amp;lt;string&amp;gt;string
            &amp;quot;run_id&amp;quot;: &amp;lt;string&amp;gt;
        },
        &amp;quot;proxy_name&amp;quot;: &amp;lt;string&amp;gt;,
        &amp;quot;proxy_type&amp;quot;: &amp;lt;string&amp;gt;,
        &amp;quot;remote_addr&amp;quot;: &amp;lt;string&amp;gt;
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;frps-中插件配置&#34;&gt;frps 中插件配置&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ini&#34; data-lang=&#34;ini&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;[common]&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;bind_port&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;7000&lt;/span&gt;

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;[plugin.user-manager]&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;addr&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;127.0.0.1:9000&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;path&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;/handler&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;ops&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;Login&lt;/span&gt;

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;[plugin.port-manager]&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;addr&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;https://127.0.0.1:9001&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;path&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;/handler&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;ops&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;NewProxy&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;tls_verify&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;addr: 插件监听的网络地址，支持 HTTP 和 HTTPS，默认为 HTTP。
path: 插件监听的请求路径。
ops: 插件需要处理的操作列表，多个 op 以英文逗号分隔。
tls_verify: 如果是 HTTPS 协议，支持忽略 TLS 身份验证。&lt;/p&gt;
&lt;h3 id=&#34;元数据&#34;&gt;元数据&lt;/h3&gt;
&lt;p&gt;为了减少 frps 的代码修改，同时提高管理插件的扩展能力，在 frpc 的配置文件中引入自定义元数据的概念。元数据会在调用 RPC 请求时发送给插件。&lt;/p&gt;
&lt;p&gt;元数据以 &lt;code&gt;meta_&lt;/code&gt; 开头，可以配置多个，元数据分为两种，一种配置在 &lt;code&gt;common&lt;/code&gt; 下，一种配置在各个 &lt;code&gt;proxy&lt;/code&gt; 中。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# frpc.ini
[common]
server_addr = 127.0.0.1
server_port = 7000
user = fake
meta_token = fake
meta_version = 1.0.0

[ssh]
type = tcp
local_port = 22
remote_port = 6000
meta_id = 123
&lt;/code&gt;&lt;/pre&gt;
      </description>
    </item>
    
  </channel>
</rss>
